git init - создание репозитория (! выполнять только в папке проекта)

git status - показывает статус локального репозитория

git add <file>... - индексация файлов
        . - проиндексировать все в текущей папке
        
git commit      - произвести новый комит. 
            -m 'сообщение' - создает коммит с указанным сообщением
            --amend - проиидексированные изменения будут добавлены в последний комит (а не создан новый). также используется для изменения сообщения комита
            

git log     - показывает историю комитов
        --pretty=
            oneline - минималистический режим
            short - краткий режим
            medium - режим по умолчанию
            full - полный режим (с коммитером и автором)
            fuller - максимальный режим

git diff        - показывает изменение в файлах со времени текущего комита. Не показывает проиндексированные изменения
           --staged - показывает проиндексированные изменения

git reflog - просмотр истории комитов с амендами

Игнорирование файлов и папок

В корне проекта создается специальный файл .gitignore

В нем описываем файлы и папки которые будут и не будут игнорироватся

Пример структуры файла:
        # комментарий
        # игнорирование конкретного файла
        .env
        # игнорирование конкретной папки
        node_modules
        logs

        # игнорирование всех скрытых файлов
        .*

        # не игнорировать файл / папку
        !.gitignore
        !.gitkeep
        
Удаленные репозитории

Для работы с удаленными репозиториями исползуется набор команд начинающихся с git remote

git remote add <псевдоним> <ссылка-на-репозиторий> - связать локальный репозиторий с удаленным
<псевдоним> - сокращенное название для удаленного реп. Обычно origin
<ссылка-на-репозиторий> - ссылка с гитхаба

git remote -v - просмотр связанных удаленных репозиториев

git push <псевдоним> <ветка> - загружаем все комиты на удаленнвй репозиторий <псевдоним> на ветку <ветка>
git push origin main/master

в качестве логина - почта от гитхаба
в качестве пароля - токен

git pull <псевдоним> <ветка> - дозагрузить недостающие комиты из удаленного репозитория в локальный

git clone <ссылка-на-репозиторий> - загрузить удаленный репозиторий локально

Работа с изменениями в файлах

git restore <file>... - откатывает изменение в модифицированных файлах до последнего комита

git restore --staged <file>... - отмена индексации файлов
git reset HEAD <file> - отмена индексации файлов

Удаление файлов из отслеживаемых

git rm <file> - удаляет файл из рабочей дирекктории и инексирует это изменение
git rm --cached <file> - индексирует остановку отслежувания файла без его удаления в рабочей директории

Отмена комитов

git reset <имя_комита> - отменить все комиты до указанного (отменяйте только локальные изменения!)
git revert <имя_комита> - отменяет все комиты с указанным включительно путем создания "антикомита" (для отмеы удаленных комитов)
